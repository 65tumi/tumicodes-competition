// frontend app.js - interacts with API_BASE from config.js
function el(id){ return document.getElementById(id); }

async function loadHost(){
  try{
    const res = await fetch(API_BASE + '/api/host');
    const j = await res.json();
    const host = j.host;
    const hostEls = document.querySelectorAll('#hostSection');
    hostEls.forEach(h=>{ if(!host){ h.classList.add('hidden'); return; } h.classList.remove('hidden'); h.innerHTML = `<strong>üëë Hosted by:</strong> <a href="${host.link}" target="_blank">${host.name}</a>`; });
  }catch(e){console.error(e);}
}

async function loadWinnerBanner(){ try{ const res = await fetch(API_BASE + '/api/current-winner'); const d = await res.json(); const b = el('winnerBanner'); if(!b) return; if(d.winner){ b.classList.remove('hidden'); b.innerHTML = `<h3>üèÜ Winner: ${d.winner.name}</h3><div style="opacity:0.9">${d.winner.about||''}</div>`; b.onclick = ()=>{ if(d.winner.link) window.open(d.winner.link,'_blank'); }; } else b.classList.add('hidden'); }catch(e){console.error(e);} }

async function loadLeaderboard(){ try{ const res = await fetch(API_BASE + '/api/channels'); const data = await res.json(); const elBoard = el('leaderboard'); if(!data.channels||data.channels.length===0){ elBoard.innerText='No channels yet.'; return; } elBoard.innerHTML=''; data.channels.forEach(ch=>{ const row=document.createElement('div'); row.className='row card'; row.style.display='flex'; row.style.justifyContent='space-between'; row.style.alignItems='center'; row.innerHTML=`<div><strong>${ch.name}</strong><div style="font-size:12px;opacity:0.8">${ch.about||''}</div></div><div style="text-align:right"><div style="font-weight:700">${ch.votes||0} votes</div><div style="margin-top:8px"><a href="${ch.voteLink}" target="_blank">Share link</a><button onclick="quickVote(${ch.id}, this)" style="margin-left:8px">Vote</button></div></div>`; elBoard.appendChild(row); }); }catch(e){console.error(e);} }

async function register(e){ if(e) e.preventDefault(); const name=el('name').value.trim(); const link=el('link').value.trim(); const about=el('about').value.trim(); const owner=el('owner').value.trim(); try{ const res=await fetch(API_BASE+'/api/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,link,about,owner})}); const data=await res.json(); const out=el('regResult'); if(res.ok){ out.classList.remove('hidden'); out.innerHTML=`Registered! Share this vote link: <a href="${data.voteLink}" target="_blank">${data.voteLink}</a>`; el('regForm').reset(); loadLeaderboard(); } else { out.classList.remove('hidden'); out.innerText=data.error||'Error'; } }catch(e){alert('Registration error');} }

async function quickVote(channelId, btn){ btn.disabled=true; try{ if(localStorage.getItem('tumi_hasVoted')){ alert('‚ùå You have already voted.'); return; } let voterId=localStorage.getItem('voterId'); if(!voterId){ voterId='v_'+Math.random().toString(36).slice(2); localStorage.setItem('voterId',voterId); } const res=await fetch(API_BASE+'/api/vote',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({channelId,voterId})}); const j=await res.json(); if(res.ok){ localStorage.setItem('tumi_hasVoted','1'); alert('Thanks for voting!'); loadLeaderboard(); loadWinnerBanner(); } else alert(j.error||'Could not vote'); }catch(e){alert('Error');} finally{ btn.disabled=false; } }

async function loadVotePage(){ const params=new URLSearchParams(window.location.search); const channelId=params.get('channel'); const elCard=el('channelCard'); if(!channelId){ if(elCard) elCard.innerText='No channel specified'; return; } try{ const res=await fetch(API_BASE+'/api/channel/'+channelId); const data=await res.json(); if(!res.ok){ elCard.innerText=data.error||'Not found'; return; } elCard.innerHTML=`<h2>${data.name}</h2><p>${data.about||''}</p><p><a href="${data.link}" target="_blank">Open channel link</a></p><p><strong>${data.votes||0} votes</strong></p><div style="margin-top:12px"><button id="voteBtn">Vote for this channel</button></div>`; el('voteBtn').addEventListener('click', async ()=>{ if(localStorage.getItem('tumi_hasVoted')){ alert('You already voted'); return; } let voterId=localStorage.getItem('voterId'); if(!voterId){ voterId='v_'+Math.random().toString(36).slice(2); localStorage.setItem('voterId',voterId); } const r=await fetch(API_BASE+'/api/vote',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({channelId,voterId})}); const j=await r.json(); if(r.ok){ localStorage.setItem('tumi_hasVoted','1'); alert('Thanks for voting!'); loadVotePage(); loadLeaderboard(); loadWinnerBanner(); } else alert(j.error||'Could not vote'); }); }catch(e){console.error(e);} }

// Admin
async function adminLogin(){ const username=el('username').value; const password=el('password').value; try{ const res=await fetch(API_BASE+'/api/admin/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password}),credentials:'include'}); if(res.ok){ el('loginCard').classList.add('hidden'); el('adminPanel').classList.remove('hidden'); loadAdminChannels(); loadAdminHost(); } else { const j=await res.json(); el('loginMsg').innerText=j.error||'Login failed'; } }catch(e){console.error(e);} }

async function loadAdminChannels(){ try{ const res=await fetch(API_BASE+'/api/admin/channels',{credentials:'include'}); if(!res.ok){ el('channelsList').innerText='Auth required'; return; } const data=await res.json(); const list=el('channelsList'); list.innerHTML=''; data.channels.forEach(ch=>{ const div=document.createElement('div'); div.className='card'; div.style.display='flex'; div.style.justifyContent='space-between'; div.style.alignItems='center'; div.innerHTML=`<div><strong>${ch.name}</strong><div style="font-size:12px;opacity:0.8">${ch.about||''}</div><div style="font-size:12px">${ch.link}</div></div><div style="text-align:right"><div style="font-weight:700">${ch.votes||0} votes</div><div style="margin-top:8px"><button onclick="declareWinner(${ch.id})">Mark as Winner</button><button onclick="removeChannel(${ch.id})" style="margin-left:8px">Remove</button></div></div>`; list.appendChild(div); }); }catch(e){console.error(e);} }

async function declareWinner(id){ if(!confirm('Mark this as winner?')) return; const res=await fetch(API_BASE+'/api/admin/declare',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id}),credentials:'include'}); if(res.ok){ alert('Winner set'); loadWinnerBanner(); } else alert('Failed'); }
async function removeChannel(id){ if(!confirm('Delete channel?')) return; const res=await fetch(API_BASE+'/api/admin/remove',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id}),credentials:'include'}); if(res.ok){ alert('Deleted'); loadAdminChannels(); } else alert('Failed'); }

async function setHost(){ const name=el('hostName').value.trim(); const link=el('hostLink').value.trim(); if(!name||!link) return alert('Enter host name and link'); const res=await fetch(API_BASE+'/api/admin/sethost',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,link}),credentials:'include'}); if(res.ok){ alert('Host saved'); loadHost(); } else alert('Failed'); }
async function loadAdminHost(){ try{ const res=await fetch(API_BASE+'/api/admin/host',{credentials:'include'}); if(!res.ok) return; const j=await res.json(); if(j.host){ el('hostName').value=j.host.name||''; el('hostLink').value=j.host.link||''; } }catch(e){console.error(e);} }

async function setEnd(){ const v=el('endDatetime').value; if(!v) return alert('Pick date/time'); const res=await fetch(API_BASE+'/api/admin/setend',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({endAt:new Date(v).toISOString()}),credentials:'include'}); if(res.ok) alert('End date set'); }
async function clearEnd(){ await fetch(API_BASE+'/api/admin/setend',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({endAt:''}),credentials:'include'}); alert('Cleared'); }
async function resetCompetition(){ if(!confirm('Reset competition? This deletes channels and votes.')) return; const res=await fetch(API_BASE+'/api/admin/reset',{method:'POST',credentials:'include'}); if(res.ok) alert('Reset'); else alert('Failed'); }
async function exportCSV(){ window.location = API_BASE + '/api/admin/export'; }
async function loadWinners(){ try{ const res=await fetch(API_BASE+'/api/winners'); const data=await res.json(); const list=el('winnersList'); if(!data.winners||data.winners.length===0){ list.innerText='No past winners yet.'; return; } list.innerHTML=''; data.winners.forEach(w=>{ const item=document.createElement('div'); item.className='card'; item.innerHTML=`<div style="display:flex;justify-content:space-between;align-items:center"><div><strong>${w.name}</strong><div style="font-size:12px;opacity:0.8">${w.declared_at}</div></div><div><a href="${w.link}" target="_blank">Open Channel</a></div></div>`; list.appendChild(item); }); }catch(e){console.error(e);} }

document.addEventListener('DOMContentLoaded', ()=>{ if(el('regForm')) el('regForm').addEventListener('submit', register); if(el('refresh')) el('refresh').addEventListener('click', loadLeaderboard); loadHost(); loadWinnerBanner(); loadLeaderboard(); if(el('channelCard')) loadVotePage(); if(el('loginBtn')) el('loginBtn').addEventListener('click', adminLogin); if(el('setHostBtn')) el('setHostBtn').addEventListener('click', setHost); if(el('setEndBtn')) el('setEndBtn').addEventListener('click', setEnd); if(el('clearEndBtn')) el('clearEndBtn').addEventListener('click', clearEnd); if(el('resetBtn')) el('resetBtn').addEventListener('click', resetCompetition); if(el('exportBtn')) el('exportBtn').addEventListener('click', exportCSV); if(el('winnersList')) loadWinners(); });
